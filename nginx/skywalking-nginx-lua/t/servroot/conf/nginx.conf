worker_processes  1;
daemon on;
master_process off;
error_log /Users/ming/work/skywalking-nginx-lua/t/servroot/logs/error.log info;
pid       /Users/ming/work/skywalking-nginx-lua/t/servroot/logs/nginx.pid;
env MOCKEAGAIN_VERBOSE;
env MOCKEAGAIN;
env MOCKEAGAIN_WRITE_TIMEOUT_PATTERN;
env LD_PRELOAD;
env LD_LIBRARY_PATH;
env DYLD_INSERT_LIBRARIES;
env DYLD_FORCE_FLAT_NAMESPACE;
#env LUA_PATH;
#env LUA_CPATH;



http {
    access_log /Users/ming/work/skywalking-nginx-lua/t/servroot/logs/access.log;
    #access_log off;

    default_type text/plain;
    keepalive_timeout  68;


    lua_package_path "/Users/ming/work/skywalking-nginx-lua/lib/skywalking/?.lua;;";
    error_log logs/error.log debug;
    resolver 114.114.114.114 8.8.8.8 ipv6=off;
    lua_shared_dict tracing_buffer 100m;


    server {
        listen          1984;
        server_name     'localhost';

        client_max_body_size 30M;
        #client_body_buffer_size 4k;

        # Begin preamble config...

        # End preamble config...

        # Begin test case config...
    location /t {
        content_by_lua_block {
            local SegmentRef = require('segment_ref')
            local cjson = require("cjson")

            local ref = SegmentRef.new()
            ref.trace_id = {3, 4, 5}
            ref.segment_id = {1, 2, 3}
            ref.span_id = 4
            ref.entry_service_instance_id = 1
            ref.parent_service_instance_id = 1
            ref.network_address = "127.0.0.1:8080"
            ref.entry_endpoint_name = "/portal"
            ref.parent_endpoint_id = 123

            local refProtocol = SegmentRef.transform(ref)
            local inJSON = cjson.encode(refProtocol)
            ngx.say(string.len(inJSON) > 0)
        }
    }

        # End test case config.

    }
}



#timer_resolution 100ms;

events {
    accept_mutex off;

    worker_connections  64;
}
env ASAN_OPTIONS;
